#include<stdio.h>
#include<stdlib.h>

int i, j, k, a, b, u, v, n, ne = 1;
int min, mincost = 0, adj[25][25], parent[25];

int find(int i) {
    while (parent[i]) {
        i = parent[i];
    }
    return i;
}

int uni(int i, int j) {
    if (i != j) {
        parent[j] = i;
        return 1;
    }
    return 0;
}

void main() {
    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    
    printf("Enter the adjacency matrix (0 for no edge, other values for edge weights):\n");
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= n; j++) {
            scanf("%d", &adj[i][j]);
            if (adj[i][j] == 0) {
                adj[i][j] = 999;
            }
        }
    }

    printf("The edges in the Minimum Spanning Tree (MST):\n");
    
    for (i = 1; i <= n; i++) {
        parent[i] = 0;
    }

    while (ne < n) {
        min = 999;

        for (i = 1; i <= n; i++) {
            for (j = 1; j <= n; j++) {
                if (adj[i][j] < min) {
                    min = adj[i][j];
                    a = i;
                    b = j;
                }
            }
        }

        u = find(a);
        v = find(b);

        if (uni(u, v)) {
            printf("Edge %d: (%d, %d) with weight %d\n", ne++, a, b, min);
            mincost += min;
        }

        adj[a][b] = adj[b][a] = 999;
    }

    printf("Total Minimum Cost of Spanning Tree: %d\n", mincost);
}
